// cache memory/register file
module register_file(
    input clk,
    input mode,
    input lea,
    input [2:0] reg_dest,
    input [2:0] reg_src,   
    input [2:0] reg_write, 
    input [2:0] immediate,
    input [7:0] data_in, 
    input write_enable, 
    output [7:0] data_out1,
    output [7:0] data_out2 );

	reg [7:0] registers[7:0];
	reg [7:0] ENTRY;

	// combinational reading

	assign data_out1 = registers[reg_dest];  
	assign data_out2 = lea ? ENTRY : registers[reg_src];  

	// sequential writing
	always_ff @(posedge clk) begin
		if (write_enable) begin
			registers[reg_write] <= data_in;
		end
	end

endmodule
